<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.home.reservation.repository.ReservationMapper">

    <!-- 예약 생성 -->
    <insert id="insertReservationByMember" parameterType="com.ssafy.home.reservation.domain.Reservation"
            useGeneratedKeys="true"
            keyProperty="rid">
        INSERT INTO reservation (member_id, broker_id, broker_name, start_time, end_time, status, client_memo,
                                 broker_memo)
        SELECT #{memberId},
               #{brokerId},
               b.broker_name,
               #{startTime},
               #{endTime},
               #{status},
               #{clientMemo},
               #{brokerMemo}
        FROM broker b
        WHERE b.bid = #{brokerId}
    </insert>

    <!-- 예약 수정 쿼리 -->
    <update id="updateReservationByMember" parameterType="com.ssafy.home.reservation.domain.Reservation">
        UPDATE
            reservation r
                INNER JOIN broker b ON b.bid = #{brokerId}
        SET r.broker_id   = #{brokerId},
            r.broker_name = b.broker_name,
            r.start_time  = #{startTime},
            r.end_time    = #{endTime},
            r.client_memo = #{clientMemo},
            r.broker_memo = #{brokerMemo},
            r.status      = #{status},
            r.updated_at  = CURRENT_TIMESTAMP
        WHERE r.rid = #{rid}
          AND r.member_id = #{memberId}
          AND r.status IN ('취소', '생성')
    </update>

    <!-- 매물 예약 연결 추가 -->
    <insert id="insertReservationEstateByBroker">
        INSERT INTO reservation_estate (reservation_id, estate_id, memo)
        VALUES (#{reservationId}, #{estateId}, #{memo})
    </insert>

    <!-- ResultMap 정의 -->
    <resultMap id="ReservationResponseMap" type="com.ssafy.home.reservation.dto.ReservationResponse">
        <!-- 예약 기본 정보 -->
        <id property="rid" column="rid"/>
        <result property="memberId" column="member_id"/>
        <result property="brokerId" column="broker_id"/>
        <result property="brokerName" column="brokerName"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="status" column="status"/>
        <result property="clientMemo" column="client_memo"/>
        <result property="brokerMemo" column="broker_memo"/>
        <result property="brokerName" column="brokerName"/>

        <!-- 매물 목록 (Estates) -->
        <collection property="estates" ofType="com.ssafy.home.reservation.dto.EstateInfo">
            <id property="eid" column="eid"/>
            <result property="aptSeq" column="apt_seq"/>
            <result property="aptName" column="apt_nm"/>
            <result property="address" column="road_nm"/>
            <result property="amount" column="amount"/>
            <result property="area" column="area"/>
            <result property="floor" column="floor"/>
            <result property="totalFloor" column="total_floor"/>
            <result property="description" column="desc"/>
            <result property="latitude" column="latitude"/>
            <result property="longitude" column="longitude"/>
        </collection>
    </resultMap>

    <!-- ID로 예약 찾기 -->
    <select id="findReservationById" parameterType="long" resultMap="ReservationResponseMap">
        SELECT r.rid,
               r.member_id,
               r.broker_id,
               r.start_time,
               r.end_time,
               r.status,
               r.client_memo,
               r.broker_memo,
               b.broker_name AS brokerName,
               e.eid,
               e.apt_seq,
               e.amount,
               e.area,
               e.floor,
               e.total_floor,
               e.desc,
               h.apt_nm,
               h.road_nm,
               h.latitude,
               h.longitude
        FROM reservation r
                 JOIN
             broker b ON r.broker_id = b.bid
                 JOIN
             reservation_estate re ON r.rid = re.reservation_id
                 JOIN
             estate e ON re.estate_id = e.eid
                 JOIN
             houseinfos h ON e.apt_seq = h.apt_seq
        WHERE r.rid = #{rid}
    </select>


    <!-- 멤버의 모든 예약 찾기 -->
    <select id="findAllReservationsByMemberId" parameterType="string" resultMap="ReservationResponseMap">
        SELECT r.rid,
               r.member_id,
               r.broker_id,
               r.start_time,
               r.end_time,
               r.status,
               r.client_memo,
               r.broker_memo,
               b.broker_name AS brokerName,
               e.eid,
               e.apt_seq,
               e.amount,
               e.area,
               e.floor,
               e.total_floor,
               e.desc,
               h.apt_nm,
               h.road_nm,
               h.latitude,
               h.longitude
        FROM reservation r
                 JOIN
             broker b ON r.broker_id = b.bid
                 JOIN
             reservation_estate re ON r.rid = re.reservation_id
                 JOIN
             estate e ON re.estate_id = e.eid
                 JOIN
             houseinfos h ON e.apt_seq = h.apt_seq
        WHERE r.member_id = #{memberId}
    </select>


    <update id="updateReservationStatusByBroker">
        UPDATE reservation
        <set>
            status = #{target},
            <if test="brokerMemo != null and brokerMemo != ''">
                broker_memo = #{brokerMemo},
            </if>
            updated_at = CURRENT_TIMESTAMP
        </set>
        WHERE rid = #{reservationId}
        AND broker_id = #{brokerId}
        AND (
        (#{target} = '확정' AND status = '생성')
        OR
        (#{target} = '취소' AND status = '생성')
        OR
        (#{target} = '완료' AND status = '확정')
        )
    </update>

</mapper>
