<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.home.review.repository.ReviewFindMapper">

    <select id="findAllMemberReview" parameterType="String" resultType="com.ssafy.home.review.dto.ReviewResponse">
        SELECT
            r.review_id AS reviewId,
            m.name AS memberName,
            b.broker_name AS brokerName,
            r.review_content AS reviewContent,
            r.broker_comment AS brokerComment,
            r.review_rating AS reviewRating,
            r.created_at AS createdAt,
            m.profile_image_url AS memberImageUrl,
            b.profile_image_url AS brokerImageUrl,
            r.broker_replied_at AS brokerRepliedAt
        FROM
            review r
                JOIN member m ON r.member_id = m.mid
                JOIN broker b ON r.broker_id = b.bid
        WHERE
            r.member_id = #{memberId}
        ORDER BY
            r.created_at DESC
    </select>


    <select id="findAllBrokerReview" parameterType="String" resultType="com.ssafy.home.review.dto.ReviewResponse">
        SELECT
            r.review_id AS reviewId,
            m.name AS memberName,
            b.broker_name AS brokerName,
            r.review_content AS reviewContent,
            r.broker_comment AS brokerComment,
            r.review_rating AS reviewRating,
            r.created_at AS createdAt,
            m.profile_image_url AS memberImageUrl,
            b.profile_image_url AS brokerImageUrl,
            r.broker_replied_at AS brokerRepliedAt
        FROM
            review r
                JOIN member m ON r.member_id = m.mid
                JOIN broker b ON r.broker_id = b.bid
        WHERE
            r.broker_id = #{brokerId}
        ORDER BY
            r.created_at DESC
    </select>

    <!-- 리뷰 점수 통계 조회
        1. 리뷰 평균
        2. 리뷰 총 합
        3. 안남긴 리뷰 횟수 -->
    <select id="findReviewScore" parameterType="string" resultType="com.ssafy.home.review.dto.ReviewScoreResponse">
        SELECT
            AVG(review_rating) AS reviewAvg,
            SUM(review_rating) AS reviewTotal,
            COUNT(CASE WHEN broker_comment IS NULL THEN 1 END) AS reviewUnComment
        FROM
            review
        WHERE
            broker_id = #{brokerId}
    </select>

</mapper>
